#!/usr/bin/env python
import argparse, sys, HTSeq 

###########################################################
def getParser():
	parser = argparse.ArgumentParser(description='Generate coverage plots.')
	parser.add_argument('-gtf'   , type=str,   dest="gtfFile",help="STR. Name of GTF file.")
	parser.add_argument('-exp'   , type=str,   dest="expFile",help="STR. Name of gene expression file.")
	parser.add_argument('-out'   , type=str,   dest="outFile",help="STR. Name of output file.")

	if len(sys.argv) == 1:
		print >> sys.stderr,parser.print_help()
		exit(0)
	return parser
###########################################################
def main():
	args    = getParser().parse_args()
	gtfFile = args.gtfFile
	expFile = args.expFile
	outFile = args.outFile    


	##############################################
	# Get gene expression
	nLine=0
	gene_exps={}
	for line in open(expFile,"r"):
		line=line.strip().split("\t")
		if nLine == 0:
			nLine += 1
			continue
		gene_id, fpkm = line[0],line[5]
		gene_exps[gene_id]=fpkm
	##############################################
	# Get non-redudant exons per gene
	gtf_file = HTSeq.GFF_Reader( gtfFile )
	exons = {}
	for feature in gtf_file:
		if feature.type != "exon": continue
		gene_id = feature.attr["gene_id"]
		transcript_id = feature.attr["transcript_id"]
		if not gene_id in exons:
			exons[gene_id]={}
			exons[gene_id][transcript_id]=[feature.iv]
		else:
			if not transcript_id in exons[gene_id]:
				exons[gene_id][transcript_id]=[feature.iv]
			else:
				exons[gene_id][transcript_id].append(feature.iv)
	##############################################
	# Print results
	out=open(outFile,'w')
	for gene_id in exons:
		if not gene_id in gene_exps:
			continue
		else:
			gene_exp = gene_exps[gene_id]
		for transcript_id in exons[gene_id]:
			if len(exons[gene_id][transcript_id])>2:
				xs=exons[gene_id][transcript_id]
				for x in xs[1:-1]:
					print >>out, "\t".join(map(str,[x.chrom,x.start,x.end,gene_id,gene_exp,x.strand]))
	out.close()
################################################################
if __name__ == '__main__':
    main()

